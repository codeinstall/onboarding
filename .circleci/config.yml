version: 2.1

orbs:
  node: circleci/node@4.1.0
  jira: circleci/jira@1.2.2
  slack: circleci/slack@3.4.2

nightly:
  triggers:
    - cron: "2 * * * *   "
    - cron: "0 20 * * *"

jobs:
  package:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Grant Permission
          command: chmod +x mvnw
      - run:
          name: Run Test
          command: mvn -Dmaven.test.skip=true package
      - slack/status:
          failure_message: Build Failure
          success_message: Build Success

  test-case-1:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Grant Permission
          command: chmod +x mvnw
      - run:
          name: Run Test
          command: mvn test

  test-case-2:
    docker:
      - image: cimg/node:12.6
    steps:
      - checkout
      - node/install-packages:
         override-ci-command: npm install
      - run:
          name: Install jest
          command: npm install --save-dev jest
      - run:
          name: Node Test ((skipping))
          command: echo "npm run test"

  test-case-3:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Grant Permission
          command: chmod +x mvnw
      - run:
          name: Java Test ((skipping))
          command: mvn test
  
  test-case-4:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Grant Permission
          command: chmod +x mvnw
      - run:
          name: Java Test ((skipping))
          command: mvn test

  deploy:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Grant Permission
          command: chmod +x mvnw
      - run:
          name: Deploy Test ((skipping))
          command: mvn test


workflows:
  version: 2.1
  auto-flow:
    jobs:
      - package:
          context: ALERTS
      - test-case-1:
          requires:
            - package
      - test-case-2:
          requires:
            - package
      - test-case-3:
          requires:
            - package
      - test-case-4:
          requires:
            - package
      - deploy:
          requires:
            - package
            - test-case-1
            - test-case-2
            - test-case-3
            - test-case-4
#